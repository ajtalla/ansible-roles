---
# tasks file for mounts
# Works only with Mitogen >=0.2.9

- name: Ensure rsync is installed
  yum:
    name: rsync
    state: latest
  tags: [ yum ]

- name: Make file system on block device
  filesystem:
    fstype: "{{ item.fstype }}"
    dev: "{{ item.src }}"
    force: no
  when: item.src not in mounts_mounted and 'bind' not in item.opts
  with_items: "{{ mounts_devices }}"

- name: Stop rsyslog process
  service:
    name: rsyslog
    state: stopped

- name: Make temporary directory for mounts_preserved_files
  file:
    path: "{{ mounts_tmp_directory }}"
    state: directory

- name: Copy mounts_preserved_files directories to backup
  synchronize:
    src: "{{ item.name }}" 
    dest: "{{ mounts_tmp_directory }}"
  delegate_to: "{{ inventory_hostname }}"
  when: item.name in mounts_preserved_files
  with_items: "{{ mounts_devices }}"

- name: Ensure devices mounted
  mount:
    name: "{{ item.name }}"
    src: "{{ item.src }}"
    fstype: "{{ item.fstype }}"
    opts: "{{ item.opts if item.opts is defined else mounts_default_opts }}"
    state: "{{ item.state if item.state is defined else mounts_default_state  }}"
    dump: "{{ item.dump if item.dump is defined else mounts_default_dump }}"
    passno: "{{ item.passno if item.passno is defined else mounts_default_passno }}"
    fstab: "{{ item.fstab if item.fstab is defined else mounts_default_fstab }}"
  with_items: "{{ mounts_devices }}"
  register: mounted_result

- name: Copy back mounts_preserved_files directories
  synchronize:
    src: "{{ mounts_tmp_directory }}{{ item.name }}"
    dest: '/' 
  delegate_to: "{{ inventory_hostname }}"
  when: item.name in mounts_preserved_files
  with_items: "{{ mounts_devices }}"

- name: Remove temporary directory
  file:
    path: "{{ mounts_tmp_directory }}"
    state: absent

- name: Mount /dev/shm as tmpfs
  command: "mount -o remount,noexec /dev/shm"

- name: Remove remnant lost+found directories
  file:
    path: "{{ item.name + '/lost+found' }}"
    state: absent
  with_items: "{{ mounts_devices }}"

- name: Restore SELinux context in /home and /var recursively
  command: "/sbin/restorecon -Rv {{ item.name }}"
  when:
    - selinux_enabled | default(true)
    - item.name in mounts_preserved_files
  with_items: "{{ mounts_devices }}"
  tags: selinux

- name: Restart rsyslog
  service:
    name: rsyslog
    state: restarted
